#include <iostream>
#include <cstdlib>
#include <iomanip>

const int MAX_SIZE = 100; // Maximum size of the array

using namespace std;

// Function to display the menu options
void displayMenu() {
    // Display the menu in a formatted style
    cout << "========================================================================================================================\n";
    cout << "|" << setw(59) << " " << "Menu:                                                      |\n";
    // Display the menu options
    cout << "| " << setw(54) << " " << "1. Update                                                      |\n";
    cout << "| " << setw(54) << " " << "2. Delete                                                      |\n";
    cout << "| " << setw(54) << " " << "3. Insert                                                      |\n";
    cout << "| " << setw(54) << " " << "4. Search                                                      |\n";
    cout << "| " << setw(54) << " " << "5. Exit                                                        |\n";
    cout << "========================================================================================================================\n";
}

// Function to update an element in the array
void updateElement(int arr[], int index, int value, int size) {
    // Check if the index is valid
    if (index >= 0 && index < size)
        arr[index] = value;
    else
        cout << "Invalid index for update.\n";
}

// Function to delete an element from the array
void deleteElement(int arr[], int index, int &size) {
    // Check if the index is valid
    if (index >= 0 && index < size) {
        for (int i = index; i < size - 1; ++i)
            arr[i] = arr[i + 1];
        --size;
    } else {
        cout << "Invalid index for deletion.\n";
    }
}

// Function to insert an element into the array
void insertElement(int arr[], int index, int value, int &size) {
    // Check if the array is full
    if (size >= MAX_SIZE) {
        cout << "Array is full, cannot insert.\n";
        return;
    }

    // Check if the index is valid
    if (index >= 0 && index <= size) {
        for (int i = size; i > index; --i)
            arr[i] = arr[i - 1];
        arr[index] = value;
        ++size;
    } else {
        cout << "Invalid index for insertion.\n";
    }
}

// Function to search for an element in the array
int searchElement(int arr[], int value, int size) {
    for (int i = 0; i < size; ++i) {
        if (arr[i] == value)
            return i;
    }
    return -1; // Not found
}

// Function to display the contents of the array
void displayArray(int arr[], int size) {
    cout << setw(46) << " " << "Current Array: ";
    for (int i = 0; i < size; ++i)
        cout << arr[i] << " ";
    cout << endl;
}

// Function to display the updated array
void updateArrays(int arr[], int size) {
    cout << setw(46) << " " << "Updated Array: ";
    for (int i = 0; i < size; ++i)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    system("color 0B");
    int arr[MAX_SIZE] = {10, 20, 30, 40, 50}; // Initial values for demonstration
    int size = 5; // Current size of the array

    int choice;
    int foundIndex; // Declare foundIndex outside the switch

    do {
        cout << endl;
        displayArray(arr, size);
        displayMenu();
        cout << setw(48) << " " << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
        case 1:
            int updateIndex, updateValue;
            cout << endl;
            cout << setw(53) << " " << "UPDATING ARRAY" << endl;
            cout << setw(48) << " " << "Enter index to update: ";
            cin >> updateIndex;
            cout << setw(48) << " " << "Enter the new value: ";
            cin >> updateValue;
            updateElement(arr, updateIndex, updateValue, size);
            updateArrays(arr, size);
            system("pause");
            system("cls");
            break;

        case 2:
            int deleteIndex;
            cout << endl;
            cout << setw(53) << " " << "DELETING ARRAY" << endl;
            cout << setw(48) << " " << "Enter index to delete: ";
            cin >> deleteIndex;
            deleteElement(arr, deleteIndex, size);
            updateArrays(arr, size);
            system("pause");
            system("cls");
            break;

        case 3:
            int insertIndex, insertValue;
            cout << endl;
            cout << setw(53) << " " << "INSERTING ARRAY" << endl;
            cout << setw(48) << " " << "Enter index to insert: ";
            cin >> insertIndex;
            cout << setw(48) << " " << "Enter the value to insert: ";
            cin >> insertValue;
            insertElement(arr, insertIndex, insertValue, size);
            updateArrays(arr, size);
            system("pause");
            system("cls");
            break;

        case 4:
            int searchValue;
            cout << endl;
            cout << setw(53) << " " << "SEARCHING IN ARRAY" << endl;
            cout << setw(48) << " " << "Enter value to search: ";
            cin >> searchValue;
            foundIndex = searchElement(arr, searchValue, size);

            if (foundIndex != -1) {
                cout << setw(48) << " " << "Value found at index: " << foundIndex << "\n";
                system("pause");
                break;
            } else {
                cout << setw(48) << " " << "Value not found.\n";
                break;
            }

        case 5:
            cout << setw(48) << " " << "Exiting the program.\n";
            break;

        default:
            cout << "Invalid choice. Please try again.\n";
        }
    } while (choice != 5);

    return 0;
}
